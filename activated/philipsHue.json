{ "name":"Hue",
  "manufacturer":"jac",
  "type":"LIGHT",
  "version":1,
  "register":{
    "registertype": "SECURITY_CODE",
    "registerheaderText": "Philips Hue Bridge registration",
    "registerdescription": "Please enter the IP address of your device, then press the button of your bridge and THEN enter.",
    "registrationcommand":{"type":"http-rest", "command":"{\"verb\":\"post\",\"call\":\"http://$RegistrationCode/api\", \"message\":{\"devicetype\":\"meta\"}}", "queryresult":"$.success.username", "evalwrite":[{"variable":"HueBridgeIp","value":"$RegistrationCode"},{"variable":"HueUserName","value":"$Result"}, {"variable":"IsRegistered","value":"DYNAMIK (\"$Result\" == \"undefined\") ? false : true"}]}
  },
  "persistedvariables":{
    "HueBridgeIp":"",
    "IsRegistered":"",
    "HueUserName":""
  },
  "discover":{
    "welcomeheadertext":"Hue Driver",
    "welcomedescription":"powered by meta\nby JAC459",
    "command":{"type":"http-get", "command":"http://$HueBridgeIp/api/$HueUserName/lights/", "queryresult":"$.*~"}
  },
  "template" : {
    "name":"Hue", 
    "dynamicname":"DYNAMIK_INST_START DYNAMIK (\"$Result\").split(\"{\\\"\")[1].split(\"\\\":{\" DYNAMIK_INST_END",
    "dynamicid":"DYNAMIK_INST_START DYNAMIK JSON.parse(\"$Result\").name DYNAMIK_INST_END",
    "manufacturer":"Philips",
    "version":8,
    "type":"LIGHT",     
    "variables":{
      "Status":"",
      "Mute":"",
      "VolumePlayed":""
    },
    "listeners" : {
      "SnapcastVolume" : {"type":"ndjsontcp", "command":"{\"call\":\"Client.GetStatus\", \"message\":{\"id\": \"DYNAMIK_INST_START DYNAMIK JSON.parse(\"$Result\").id DYNAMIK_INST_END\"}}", "queryresult" : "$.client.config.volume", 
        "pooltime":"3000",
        "evalwrite" : [ 
            {"variable" : "VolumePlayed", "value" : "DYNAMIK JSON.parse(\"$Result\").percent"},
            {"variable" : "Mute", "value" : "DYNAMIK JSON.parse(\"$Result\").muted"}
          ]
        }
    },    
    "labels":{  
      "CurrentStatus" : {"label":" ", "listen":"Status"}
    },
    "switches":{
      "POWER" : {"label":"Mute", "listen":"Mute", "evaldo":[{"test":"DYNAMIK $Result", "then":"__MUTE", "or":"__UNMUTE"}]}
    },
    "sliders":{
        "BRIGHTNESS": {"label":"Volume", "unit" : "db", "listen" : "VolumePlayed", "evaldo":[{"test":true, "then":"VOLUMECHANGE", "or":""}]}
    },
    "buttons":{
        "POWER ON": {"label":"", "type":"static", "command":"", "evaldo":[{"test":true,"then":"INITIALISE", "or":""}]},
        "POWER OFF": {"label":"", "type":"static", "command":"", "evaldo":[{"test":true,"then":"CLEANUP", "or":""}]},
        "INITIALISE": {"label": "", "type":"static", "command":""},
        "__MUTE": {"label":"", "type":"ndjsontcp", "command":"{\"call\":\"Client.SetVolume\", \"message\":{\"id\": \"DYNAMIK_INST_START DYNAMIK JSON.parse(\"$Result\").id DYNAMIK_INST_END\", \"volume\": {\"muted\": true}}}", "evalwrite":[{"variable":"Mute","value":"true"}]},
        "__UNMUTE": {"label":"", "type":"ndjsontcp", "command":"{\"call\":\"Client.SetVolume\", \"message\":{\"id\": \"DYNAMIK_INST_START DYNAMIK JSON.parse(\"$Result\").id DYNAMIK_INST_END\", \"volume\": {\"muted\": false}}}", "evalwrite":[{"variable":"Mute","value":"false"}]},
        "VOLUMECHANGE": {"label":"", "type":"ndjsontcp", "command":"{\"call\":\"Client.SetVolume\", \"message\":{\"id\": \"DYNAMIK_INST_START DYNAMIK JSON.parse(\"$Result\").id DYNAMIK_INST_END\", \"volume\": {\"percent\": $VolumePlayed}}}"},
        "CLEANUP": {"label": "", "type":"static", "command":""}
    }
  }
}